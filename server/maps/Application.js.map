{"version":3,"sources":["../../source/nodeserver/Application.ts"],"names":[],"mappings":";;;AAAA,qDAAkD;AAClD,mDAAiD;AACjD,2DAAyD;AACzD,MAAa,WAAW;IAGpB,YAAY,OAAO;QACf,IAAI,CAAC,MAAM,GAAG,IAAI,mBAAQ,EAAE,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IACD,SAAS,CAAC,WAAW;QACjB,QAAQ,WAAW,EAAE;YACjB,KAAK,KAAK;gBACN,OAAO,sBAAU,CAAC;YACtB,KAAK,SAAS;gBACV,OAAO,8BAAc,CAAC;YAE1B;gBACI,OAAO,SAAS,CAAC;SACxB;IACL,CAAC;IACD,UAAU,CAAC,WAAgB,EAAE,SAAS;QAClC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACnC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;gBAC3C,IAAI,IAAI,CAAC,MAAM,EAAE;oBAGb,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;oBAClD,IAAI,MAAM,EAAE;wBACR,MAAM,GAAG,GAAG,IAAI,MAAM,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;wBAChD,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;4BAC1D,OAAO,CAAC,MAAM,CAAC,CAAC;wBACpB,CAAC,CAAC,CAAC;qBACN;yBAAM;wBACH,OAAO,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,wDAAwD,EAAE,CAAC,CAAC;qBACjG;iBACJ;qBAAM;oBACH,OAAO,CAAC,IAAI,CAAC,CAAC;iBACjB;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AAvCD,kCAuCC","file":"../Application.js","sourcesContent":["import { DataBase } from \"./modules/lib/DataBase\";\r\nimport { Module_App } from \"./modules/ModuleApp\";\r\nimport { Module_Teacher } from \"./modules/ModuleTeacher\";\r\nexport class Application {\r\n    db_obj: any;\r\n    path2db: string;\r\n    constructor(path2db) {\r\n        this.db_obj = new DataBase();\r\n        this.path2db = path2db;\r\n    }\r\n    getModule(module_name) {\r\n        switch (module_name) {\r\n            case \"App\":\r\n                return Module_App;\r\n            case \"Teacher\":\r\n                return Module_Teacher;\r\n\r\n            default:\r\n                return undefined;\r\n        }\r\n    }\r\n    loadModule(module_info: any, post_data) {\r\n        return new Promise((resolve, reject) => {\r\n            this.db_obj.initDB(this.path2db).then((answ) => {\r\n                if (answ.result) {\r\n                    // const database = this.db_obj.getDB();\r\n                    // console.log(database);\r\n                    const Module = this.getModule(module_info.module);\r\n                    if (Module) {\r\n                        const obj = new Module({ db_obj: this.db_obj });\r\n                        obj.runtAction(module_info.action, post_data).then((answer) => {\r\n                            resolve(answer);\r\n                        });\r\n                    } else {\r\n                        resolve({ result: false, message: \"Произошла ошибка при загрузке модуля. Модуль не найден\" });\r\n                    }\r\n                } else {\r\n                    resolve(answ);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n"]}