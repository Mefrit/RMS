{"version":3,"sources":["../../source/nodeserver/modules/lib/functions.ts"],"names":[],"mappings":"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","file":"../../../modules/lib/functions.js","sourcesContent":["const fs = require(\"fs\"); // Для взаимодействия с файловой системой\r\nconst path = require(\"path\"); // Для работы с путями файлов и каталогов\r\nconst md5 = require(\"md5\");\r\nconst mimeTypes = {\r\n    \".html\": \"text/html\",\r\n    \".js\": \"text/javascript\",\r\n    \".css\": \"text/css\",\r\n    \".ico\": \"image/x-icon\",\r\n    \".png\": \"image/png\",\r\n    \".jpg\": \"image/jpeg\",\r\n    \".gif\": \"image/gif\",\r\n    \".svg\": \"image/svg+xml\",\r\n    \".json\": \"application/json\",\r\n    \".woff\": \"font/woff\",\r\n    \".woff2\": \"font/woff2\",\r\n    \".map\": \"application/json\",\r\n};\r\nimport * as nodemailer from \"nodemailer\";\r\n// import { resolve } from \"path/posix\";\r\nimport { get_db_connection_answer } from \"../../interfaces/interface\";\r\nimport { base_path, addition_path, path_to_download } from \"../../settings\"\r\nexport function load_static_file(response, uri) {\r\n    response.setHeader(\"Content-Type\", \"text/html; charset=utf-8;\");\r\n\r\n    // получаем путь после слеша\r\n    // const filePath = request.url.substr(1);\r\n    const filePath = \"..\" + uri.pathname;\r\n\r\n    fs.readFile(filePath, function (error, data) {\r\n        const parsedUrl = new URL(filePath, \"https://node-http.glitch.me/\");\r\n        let pathName = parsedUrl.pathname;\r\n        let ext = path.extname(pathName);\r\n\r\n        if (error) {\r\n            response.statusCode = 404;\r\n            response.end(\"Resourse not found!\");\r\n        } else {\r\n            response.setHeader(\"Content-Type\", mimeTypes[ext]);\r\n            response.end(data);\r\n        }\r\n    });\r\n}\r\nexport function getUrlInfo(url) {\r\n\r\n    var result = {};\r\n    url.split(\"&\").forEach(function (part) {\r\n        var item = part.split(\"=\");\r\n        result[item[0]] = decodeURIComponent(item[1]);\r\n    });\r\n    return result;\r\n}\r\nexport function isStatic(url) {\r\n    let result = true;\r\n    result = result && url.indexOf(\"node_modules/bootstrap\") == -1;\r\n    return true;\r\n}\r\nexport function sendEmail(transport_obj, mail_data) {\r\n    return new Promise((resolve, reject) => {\r\n        const transporter = nodemailer.createTransport(transport_obj);\r\n\r\n        transporter.sendMail(mail_data, function (err, info) {\r\n            if (err) resolve({ result: false, message: err.message });\r\n            else {\r\n                resolve({ result: true, info: info });\r\n            }\r\n        });\r\n        // resolve({ result: false, message: \"не удалось отправить сообщение\" })\r\n    });\r\n}\r\nexport function authenticate(login, password, application) {\r\n    return new Promise(async (resolve, reject) => {\r\n        application.getDbConnection().then(async (data: get_db_connection_answer) => {\r\n            if (data.result) {\r\n                const sql = `SELECT id_user FROM users WHERE login='${login}' AND password='${md5(password.trim())}' `;\r\n                data.db_cis.query(sql, (err, res) => {\r\n                    if (err) {\r\n                        resolve({ result: false, message: \"Ошибка при загрузке пользователя\" + err.message });\r\n                    }\r\n                    if (res == undefined) {\r\n                        resolve({ result: false, message: \"Ошибка при загрузке пользователя\" });\r\n                    } else {\r\n                        if (res.hasOwnProperty(\"rows\")) {\r\n                            if (res.rows.length > 0) {\r\n                                resolve({ result: true, id_user: res.rows[0].id_user });\r\n                            }\r\n                        }\r\n                    }\r\n                    resolve({ result: true, id_user: 20 });\r\n                    data.db_cis.end();\r\n                });\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nexport function createUrlLink2File(db_path) {\r\n    return base_path + addition_path + path_to_download + db_path.slice(0, 2) + \"/\" + db_path.slice(2, 4) + \"/\" + db_path\r\n}\r\nexport function checkDir(path2dir, d1, d2) {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n\r\n            if (!fs.existsSync(\".\" + path2dir + d1 + \"/\")) {\r\n                fs.mkdirSync(\".\" + path2dir + d1 + \"/\")\r\n\r\n            }\r\n            if (!fs.existsSync(\".\" + path2dir + d1 + \"/\" + d2 + \"/\")) {\r\n                fs.mkdirSync(\".\" + path2dir + d1 + \"/\" + d2 + \"/\")\r\n\r\n            }\r\n            resolve({ result: true })\r\n        } catch (err) {\r\n            resolve({ result: false })\r\n        }\r\n    })\r\n}"]}