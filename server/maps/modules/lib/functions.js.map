{"version":3,"sources":["../../source/nodeserver/modules/lib/functions.ts"],"names":[],"mappings":";;;AAAA,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACzB,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,MAAM,SAAS,GAAG;IACd,OAAO,EAAE,WAAW;IACpB,KAAK,EAAE,iBAAiB;IACxB,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE,cAAc;IACtB,MAAM,EAAE,WAAW;IACnB,MAAM,EAAE,YAAY;IACpB,MAAM,EAAE,WAAW;IACnB,MAAM,EAAE,eAAe;IACvB,OAAO,EAAE,kBAAkB;IAC3B,OAAO,EAAE,WAAW;IACpB,QAAQ,EAAE,YAAY;IACtB,MAAM,EAAE,kBAAkB;CAC7B,CAAC;AACF,SAAgB,gBAAgB,CAAC,OAAO,EAAE,QAAQ,EAAE,GAAG;IACnD,QAAQ,CAAC,SAAS,CAAC,cAAc,EAAE,2BAA2B,CAAC,CAAC;IAGhE,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACvC,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,UAAU,KAAK,EAAE,IAAI;QACvC,MAAM,SAAS,GAAG,IAAI,GAAG,CAAC,QAAQ,EAAE,8BAA8B,CAAC,CAAC;QACpE,IAAI,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;QAClC,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACjC,IAAI,KAAK,EAAE;YACP,QAAQ,CAAC,UAAU,GAAG,GAAG,CAAC;YAC1B,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;SACvC;aAAM;YACH,QAAQ,CAAC,SAAS,CAAC,cAAc,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YACnD,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACtB;IACL,CAAC,CAAC,CAAC;AACP,CAAC;AAjBD,4CAiBC;AACD,SAAgB,UAAU,CAAC,GAAG;IAC1B,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,IAAI;QACjC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC3B,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAClB,CAAC;AAPD,gCAOC","file":"../../../modules/lib/functions.js","sourcesContent":["const fs = require(\"fs\"); // Для взаимодействия с файловой системой\r\nconst path = require(\"path\"); // Для работы с путями файлов и каталогов\r\nconst mimeTypes = {\r\n    \".html\": \"text/html\",\r\n    \".js\": \"text/javascript\",\r\n    \".css\": \"text/css\",\r\n    \".ico\": \"image/x-icon\",\r\n    \".png\": \"image/png\",\r\n    \".jpg\": \"image/jpeg\",\r\n    \".gif\": \"image/gif\",\r\n    \".svg\": \"image/svg+xml\",\r\n    \".json\": \"application/json\",\r\n    \".woff\": \"font/woff\",\r\n    \".woff2\": \"font/woff2\",\r\n    \".map\": \"application/json\",\r\n};\r\nexport function load_static_file(request, response, uri) {\r\n    response.setHeader(\"Content-Type\", \"text/html; charset=utf-8;\");\r\n\r\n    // получаем путь после слеша\r\n    const filePath = request.url.substr(1);\r\n    fs.readFile(filePath, function (error, data) {\r\n        const parsedUrl = new URL(filePath, \"https://node-http.glitch.me/\");\r\n        let pathName = parsedUrl.pathname;\r\n        let ext = path.extname(pathName);\r\n        if (error) {\r\n            response.statusCode = 404;\r\n            response.end(\"Resourse not found!\");\r\n        } else {\r\n            response.setHeader(\"Content-Type\", mimeTypes[ext]);\r\n            response.end(data);\r\n        }\r\n    });\r\n}\r\nexport function getUrlInfo(url) {\r\n    var result = {};\r\n    url.split(\"&\").forEach(function (part) {\r\n        var item = part.split(\"=\");\r\n        result[item[0]] = decodeURIComponent(item[1]);\r\n    });\r\n    return result;\r\n}\r\n"]}