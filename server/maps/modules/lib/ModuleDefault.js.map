{"version":3,"sources":["../../source/nodeserver/modules/lib/ModuleDefault.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,2BAA4B;AAE5B,MAAa,cAAc;IAEvB,YAAY,KAAK;QAoCjB,oBAAe,GAAG,CAAO,QAAQ,EAAE,GAAG,EAAE,EAAE;YAEtC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACnC,QAAQ,CAAC,SAAS,CAAC,GAAG,EAAE;oBACpB,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,GAAG,EAAE,IAAI;wBACjC,IAAI,GAAG,EAAE;4BACL,OAAO,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;yBAC9B;wBACD,OAAO,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;oBAC1C,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAA,CAAC;QA/CE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IAC/B,CAAC;IACK,QAAQ;;YAUV,MAAM,MAAM,GAAG,IAAI,WAAM,CAAC;gBACtB,IAAI,EAAE,KAAK;gBACX,IAAI,EAAE,WAAW;gBACjB,QAAQ,EAAE,QAAQ;gBAClB,QAAQ,EAAE,YAAY;gBACtB,IAAI,EAAE,IAAI;aACb,CAAC,CAAC;YACH,MAAM,MAAM,CAAC,OAAO,EAAE,CAAC;YACvB,MAAM,KAAK,GAAG,qBAAqB,CAAC;YACpC,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,MAAM,CAAC,CAAC;YACxD,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;gBAC7B,IAAI,GAAG,EAAE;oBACL,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;oBAChC,OAAO;iBACV;gBACD,OAAO,CAAC,GAAG,CAAC,iDAAiD,EAAE,GAAG,CAAC,CAAC;gBACpE,MAAM,CAAC,GAAG,EAAE,CAAC;YACjB,CAAC,CAAC,CAAC;QACP,CAAC;KAAA;IAED,UAAU,CAAC,WAAW,EAAE,IAAI;QACxB,OAAO,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;CAcJ;AAnDD,wCAmDC","file":"../../../modules/lib/ModuleDefault.js","sourcesContent":["import { Client } from \"pg\";\r\n\r\nexport class Module_Default {\r\n    db_obj: any;\r\n    constructor(props) {\r\n        this.db_obj = props.db_obj;\r\n    }\r\n    async getCisBd() {\r\n        // $dsn = array(\r\n        //     'type' => 'pgsql',\r\n        //     'database' => \"db_cis\",\r\n        //     'port' => 5432,\r\n        //     'hostspec' => \"localhost\",\r\n        //     'username' => \"cis\",\r\n        //     'password' => \"cis_passwd\",\r\n        //     \"phptype\" => \"pgsql\"\r\n        // );\r\n        const client = new Client({\r\n            user: \"cis\",\r\n            host: \"localhost\",\r\n            database: \"db_cis\",\r\n            password: \"cis_passwd\",\r\n            port: 5432,\r\n        });\r\n        await client.connect();\r\n        const query = \"SELECT * FROM users\";\r\n        console.log(\"EHREEEE CISSS!!!!!!!!!!!!!!!!!! \", client);\r\n        client.query(query, (err, res) => {\r\n            if (err) {\r\n                console.error(\"getCisBd \", err);\r\n                return;\r\n            }\r\n            console.log(\" getCisBd ===>>>> Table is successfully created\", res);\r\n            client.end();\r\n        });\r\n    }\r\n    // все актион связанные с БД возвращают Promise?\r\n    runtAction(name_action, data) {\r\n        return this[\"action\" + name_action](data);\r\n    }\r\n    makeRequestToDb = async (database, sql) => {\r\n        // await ...\r\n        return new Promise((resolve, reject) => {\r\n            database.serialize(() => {\r\n                database.all(sql, function (err, rows) {\r\n                    if (err) {\r\n                        resolve({ result: false });\r\n                    }\r\n                    resolve({ result: true, rows: rows });\r\n                });\r\n            });\r\n        });\r\n    };\r\n}\r\n"]}