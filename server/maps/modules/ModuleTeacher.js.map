{"version":3,"sources":["../../source/nodeserver/modules/ModuleTeacher.ts"],"names":[],"mappings":";;;AAAA,uDAAqD;AACrD,gDAA6C;AAC7C,MAAa,cAAe,SAAQ,8BAAc;IAAlD;;QACI,sBAAiB,GAAG,CAAC,SAAc,EAAE,EAAE;YACnC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;gBACnC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBAC3B,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;gBACrC,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC;gBACzC,IAAI,SAAS,CAAC,aAAa,IAAI,KAAK,EAAE;oBAClC,QAAQ,CAAC,SAAS,CAAC,GAAG,EAAE;wBAEpB,QAAQ,CAAC,GAAG,CAAC,qBAAqB,EAAE,UAAU,GAAG,EAAE,IAAI;4BACnD,IAAI,GAAG,EAAE;gCACL,OAAO,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,6CAA6C,EAAE,CAAC,CAAC;6BACtF;4BACD,OAAO,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;wBAChD,CAAC,CAAC,CAAC;oBACP,CAAC,CAAC,CAAC;iBACN;qBAAM;oBACH,OAAO,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,oDAAoD,EAAE,CAAC,CAAC;iBAC7F;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;IAQN,CAAC;IAPG,WAAW,CAAC,SAAc;QACtB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACnC,MAAM,UAAU,GAAG,IAAI,aAAK,CAAC,EAAE,CAAC,CAAC;YACjC,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YAC/C,OAAO,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,8BAA8B,EAAE,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;AA5BD,wCA4BC","file":"../../modules/ModuleTeacher.js","sourcesContent":["import { Module_Default } from \"./lib/ModuleDefault\";\r\nimport { Bayes } from \"../modules/lib/bayes\";\r\nexport class Module_Teacher extends Module_Default {\r\n    actionGetDocsList = (post_data: any) => {\r\n        return new Promise((resolve, reject) => {\r\n            console.log(\"getDocsList\");\r\n            const database = this.db_obj.getDB();\r\n            console.log(\"post_data ==> \", post_data);\r\n            if (post_data.type_resource == \"cms\") {\r\n                database.serialize(() => {\r\n                    // FIX ME переделать, клогда будем добавлять ссылки из cis\r\n                    database.all(`SELECT * FROM links`, function (err, rows) {\r\n                        if (err) {\r\n                            resolve({ result: false, message: \"Не удалось загрузить ссылки на документацию\" });\r\n                        }\r\n                        resolve({ result: true, docs_links: rows });\r\n                    });\r\n                });\r\n            } else {\r\n                resolve({ result: false, message: \"Не удалось загрузить ссылки на документацию в CIS.\" });\r\n            }\r\n        });\r\n    };\r\n    actionTrain(post_data: any) {\r\n        return new Promise((resolve, reject) => {\r\n            const train_byes = new Bayes(\"\");\r\n            train_byes.trainByLetter(post_data.letter, []);\r\n            resolve({ result: false, message: \"Не удалось обучить алгоритм.\" });\r\n        });\r\n    }\r\n}\r\n"]}