{"version":3,"sources":["../../source/nodeserver/index.ts"],"names":[],"mappings":"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","file":"../index.js","sourcesContent":["import * as express from 'express';\r\nconst port = 8000;\r\nconst basePath = 'localhost:8000';\r\nimport { md5 } from \"md5\";\r\nimport * as session from 'express-session';\r\nimport * as bodyParser from 'body-parser';\r\nvar md5 = require('md5');\r\nconst app = express();\r\nconst path = require('path');\r\nimport { Application } from \"./Application\";\r\n\r\nconst path2db_sqlite = \"./database.db3\";\r\nconst dsn_cis = {\r\n    user: \"cis\",\r\n    host: \"localhost\",\r\n    database: \"db_cis\",\r\n    password: \"cis_passwd\",\r\n    port: 5432,\r\n}\r\nconst application = new Application(path2db_sqlite, dsn_cis);\r\n\r\nconst router = express.Router();\r\n\r\nfunction authenticate(login, password, application) {\r\n    return new Promise(async (resolve, reject) => {\r\n        application.getDbConnection().then(async (data: any) => {\r\n\r\n            if (data.result) {\r\n                const sql = `SELECT id_user FROM users WHERE login='${login}' AND password='${md5(password.trim())}' `\r\n                data.db_cis.query(sql, (err, res) => {\r\n                    if (err) {\r\n                        resolve({ result: false });\r\n                    }\r\n                    if (res === undefined) {\r\n                        resolve({ result: false });\r\n                    }\r\n                    if (res.rows) {\r\n                        if (res.rows.length > 0) {\r\n                            resolve({ result: true, id_user: res.rows[0].id_user });\r\n                        }\r\n                    }\r\n                    resolve({ result: false });\r\n                    // resolve({ result: true, rows: res.rows });\r\n                    data.db_cis.end()\r\n                })\r\n            }\r\n        })\r\n    })\r\n}\r\nrouter.use(session({\r\n    resave: false, // don't save session if unmodified\r\n    saveUninitialized: true, // don't create session until something stored\r\n    secret: 'strange mood'\r\n}));\r\n\r\nrouter.use((req, res, next) => {\r\n    delete req.session.error;\r\n    delete req.session.success;\r\n    next();\r\n});\r\n\r\n\r\nrouter.use('/login', bodyParser.urlencoded({\r\n    extended: true,\r\n    type: 'application/x-www-form-urlencoded'\r\n}));\r\nrouter.use((req, res, next) => {\r\n    // console.log(\"TEST111\", req.session);\r\n    res.locals.user = req.session.user;\r\n    next();\r\n});\r\nrouter.post('/login', (req, res) => {\r\n\r\n    authenticate(req.body.username, req.body.password, application).then((answ: any) => {\r\n\r\n        if (answ.result) {\r\n            // Regenerate session when signing in\r\n            // to prevent fixation          \r\n            req.session.regenerate(() => {\r\n                req.session.user = { id_user: answ.id_user };\r\n                res.redirect(req.query.back || (req.baseUrl + '/public/index.html'));\r\n            });\r\n        } else {\r\n            req.session.error = 'Authentication failed, please check your '\r\n                + ' username and password.';\r\n\r\n            res.redirect(req.baseUrl + '/login');\r\n        }\r\n    });\r\n\r\n\r\n});\r\nrouter.get('/login', (req, res) => {\r\n    res.render('login', {\r\n        error: req.session.error,\r\n        success: req.session.success\r\n    });\r\n});\r\n\r\nrouter.post('/api', (request, response) => {\r\n\r\n    if (request.method == 'POST') {\r\n        console.log(\"q.restrict.user\", request.session.user);\r\n        var body = '';\r\n        request.on('data', function (data) {\r\n            body += data;\r\n            if (body.length > 1e6)\r\n                request.connection.destroy();\r\n        });\r\n        request.on('end', function () {\r\n            var post_data = JSON.parse(body);\r\n            if (request.session.user) {\r\n                post_data.id_user = request.session.user.id_user;\r\n            }\r\n\r\n            application.loadModule(post_data).then((data) => {\r\n                response.send(JSON.stringify(data));\r\n                response.end();\r\n            });\r\n        });\r\n    }\r\n});\r\nfunction restrict(req, res, next) {\r\n\r\n    if (req.session.user /*|| req.hostname == 'localhost'*/) {\r\n        next();\r\n    } else {\r\n        if (req.url != \"/login\" && req.url != \"/public/login.html\") {\r\n            var url = req.baseUrl + '/public/login.html?back=' + encodeURIComponent(req.originalUrl);\r\n            var url = req.baseUrl + '/login'\r\n            res.redirect(url);\r\n        } else {\r\n\r\n            // return res.redirect('/login');\r\n            res.render('login', {\r\n                error: req.session.error,\r\n                success: req.session.success\r\n            });\r\n\r\n        }\r\n    }\r\n}\r\n\r\nrouter.use(restrict);\r\napp.set('view engine', 'ejs');\r\napp.set('views', __dirname + '/../public/views/');\r\napp.locals.basePath = basePath;\r\n// // app.engine('html', engines.hogan);\r\n// app.set('view engine', 'html');\r\napp.use(\"/\", router);\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: true }))\r\napp.use(express.static(path.join(__dirname, \"../\")));\r\n\r\n\r\nconst server = app.listen(port, (error) => {\r\n    if (error) return console.log(`Error: ${error}`);\r\n    console.log(`Server listening on port ${server.address().port}`);\r\n});\r\n"]}