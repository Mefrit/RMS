{"version":3,"sources":["../../source/nodeserver/index.ts"],"names":[],"mappings":"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","file":"../index.js","sourcesContent":["import * as express from 'express';\r\nimport { md5 } from \"md5\";\r\nimport * as session from 'express-session';\r\nimport { Application } from \"./Application\";\r\nimport * as bodyParser from 'body-parser';\r\nvar multer = require('multer');\r\nimport * as fs from \"fs\";\r\nimport { sendEmail } from \"./modules/lib/functions\"\r\nvar md5 = require('md5');\r\nconst app = express();\r\nconst port = 8000;\r\nconst basePath = 'http://10.1.4.8:8000';\r\nconst path = require('path');\r\nconst path2db_sqlite = \"./database.db3\";\r\nconst dsn_cis = {\r\n    user: \"cis\",\r\n    host: \"localhost\",\r\n    database: \"db_cis\",\r\n    password: \"cis_passwd\",\r\n    port: 5432,\r\n}\r\nconst transport_obj = {\r\n    service: 'gmail',\r\n    auth: {\r\n        user: 'mefrit.1999@gmail.com',\r\n        pass: '56189968',\r\n    }\r\n}\r\nconst application = new Application(path2db_sqlite, dsn_cis);\r\n\r\nconst router = express.Router();\r\n\r\nfunction authenticate(login, password, application) {\r\n    return new Promise(async (resolve, reject) => {\r\n        application.getDbConnection().then(async (data: any) => {\r\n\r\n            if (data.result) {\r\n                const sql = `SELECT id_user FROM users WHERE login='${login}' AND password='${md5(password.trim())}' `\r\n                data.db_cis.query(sql, (err, res) => {\r\n                    if (err) {\r\n                        resolve({ result: false });\r\n                    }\r\n                    if (res == undefined) {\r\n                        resolve({ result: false, message: \"Ошибка при загрузке пользователя\" });\r\n                    } else {\r\n                        if (res.hasOwnProperty(\"rows\")) {\r\n                            if (res.rows.length > 0) {\r\n                                resolve({ result: true, id_user: res.rows[0].id_user });\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    resolve({ result: false });\r\n                    // resolve({ result: true, rows: res.rows });\r\n                    data.db_cis.end()\r\n                })\r\n            }\r\n        })\r\n    })\r\n}\r\nrouter.use(session({\r\n    resave: false, // don't save session if unmodified\r\n    saveUninitialized: true, // don't create session until something stored\r\n    secret: 'strange mood'\r\n}));\r\n\r\nrouter.use((req, res, next) => {\r\n    delete req.session.error;\r\n    delete req.session.success;\r\n    next();\r\n});\r\n\r\n\r\nrouter.use('/login', bodyParser.urlencoded({\r\n    extended: true,\r\n    type: 'application/x-www-form-urlencoded'\r\n}));\r\nrouter.use((req, res, next) => {\r\n    res.locals.user = req.session.user;\r\n    next();\r\n});\r\nrouter.post('/login', (req, res) => {\r\n    console.log(\"= request.url.substr(1)  111111111111111111111111    \", req.url, req.query.back);\r\n    authenticate(req.body.username, req.body.password, application).then((answ: any) => {\r\n\r\n        if (answ.result) {\r\n\r\n            req.session.regenerate(() => {\r\n                req.session.user = { id_user: answ.id_user };\r\n                // res.redirect(req.query.back || (req.baseUrl + '/public/index.html'));\r\n                // console.log(\"!!!!!!!!!!!! req.url\", req.url);\r\n                if (req.url.indexOf(\"public\") == -1) {\r\n                    res.redirect(req.query.back || (req.baseUrl + '/public/index.html'));\r\n                } else {\r\n                    res.redirect(req.query.back || (req.baseUrl + req.url));\r\n                }\r\n\r\n            });\r\n        } else {\r\n            req.session.error = 'Authentication failed, please check your '\r\n                + ' username and password.';\r\n\r\n            res.redirect(req.baseUrl + '/login');\r\n        }\r\n    });\r\n});\r\nrouter.get('/login', (req, res) => {\r\n    res.render('login', {\r\n        error: req.session.error,\r\n        success: req.session.success\r\n    });\r\n});\r\nrouter.get(\"/public/comments.html\", (req, res, next) => {\r\n    const url = new URL(req.url, \"https://node-http.glitch.me/\")\r\n    console.log(url.searchParams.get('id_question') != null, \"&&\", url.searchParams.get('id_user') != null);\r\n    if (url.searchParams.get('id_question') != null && url.searchParams.get('id_user') != null) {\r\n        req.session.comments = { id_user: url.searchParams.get('id_user') }\r\n    }\r\n    next();\r\n\r\n})\r\nrouter.get(\"/public/teach.html\", (req, res, next) => {\r\n\r\n    req.session.comments = undefined;\r\n    next();\r\n\r\n})\r\nrouter.get(\"/public/index.html\", (req, res, next) => {\r\n\r\n    req.session.comments = undefined;\r\n    next();\r\n\r\n})\r\nrouter.post('/api', (request, response) => {\r\n    console.log(\"HERE!!!!!!!!!!!!!!!!!!!!!!!!!!!!!2222222222\")\r\n    if (request.method == 'POST') {\r\n\r\n        var body = '';\r\n        request.on('data', function (data) {\r\n            body += data;\r\n            if (body.length > 1e6)\r\n                request.connection.destroy();\r\n        });\r\n        request.on('end', function () {\r\n            var post_data = JSON.parse(body);\r\n            if (request.session.user) {\r\n                post_data.id_user = request.session.user.id_user;\r\n            }\r\n            application.loadModule(post_data).then((data) => {\r\n                response.send(JSON.stringify(data));\r\n                response.end();\r\n            });\r\n        });\r\n    }\r\n});\r\n\r\nconst upload = multer({ storage: multer.memoryStorage() })\r\nconst handleError = (err, res) => {\r\n    res\r\n        .status(500)\r\n        .contentType(\"text/plain\")\r\n        .end(\"Oops! Something went wrong!\");\r\n};\r\n\r\nrouter.post('/send', upload.array(\"file_uploaded\" /* name attribute of <file> element in your form */), (request, response) => {\r\n    if (request.method == 'POST') {\r\n        let attachments = request.files.map(file => {\r\n            // console.log(file);\r\n            return { filename: file.originalname, content: file.buffer }\r\n        });\r\n        const send_data = {\r\n            from: request.body.address2sender,  // sender address\r\n            to: request.body.address2send,   // list of receivers\r\n            subject: request.body.subject,\r\n            text: request.body.content,\r\n            attachments: attachments\r\n        }\r\n\r\n        sendEmail(transport_obj, send_data).then((data: any) => {\r\n            if (data.result) {\r\n                const module_info = {\r\n                    module: \"Answer\",\r\n                    action: \"SetTimeAnswering\",\r\n                    time: new Date().getTime(),\r\n                    id_question: request.body.id_question\r\n                };\r\n                application.loadModule(module_info).then((data: any) => {\r\n                    if (!data.result) {\r\n                        response.redirect(request.baseUrl + '/public/index.html?message=' + data.message);\r\n                    } else {\r\n                        response.redirect(request.baseUrl + '/public/index.html');\r\n                    }\r\n                    response.end();\r\n                });\r\n\r\n                // application.setTimeAsnwering(request.body.id_question)\r\n\r\n            } else {\r\n                response.redirect(request.baseUrl + `/public/answer.html?id_question=${request.body.id_question}&message=${data.message}`);\r\n                response.end();\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n});\r\nfunction restrict(req, res, next) {\r\n    if (req.session.user || req.session.comments || req.url.indexOf(\"bootstrap\") != -1) {\r\n        next();\r\n    } else {\r\n        if ((req.url != \"/login\" && req.url != \"/public/login.html\")) {\r\n            var url = req.baseUrl + '/login'\r\n            res.redirect(url);\r\n        } else {\r\n            res.render('login', {\r\n                error: req.session.error,\r\n                success: req.session.success\r\n            });\r\n        }\r\n    }\r\n}\r\nrouter.use(restrict);\r\napp.set('view engine', 'ejs');\r\napp.set('views', __dirname + '/../public/views/');\r\napp.locals.basePath = basePath;\r\n\r\napp.use(\"/\", router);\r\napp.use(express.json());\r\napp.use(express.urlencoded({ extended: true }))\r\napp.use(express.static(path.join(__dirname, \"../\")));\r\n\r\n\r\nconst server = app.listen(port, (error) => {\r\n    if (error) return console.log(`Error: ${error}`);\r\n    console.log(`Server listening on port ${server.address().port}`);\r\n});\r\n"]}